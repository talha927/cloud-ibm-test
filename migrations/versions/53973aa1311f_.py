"""empty message

Revision ID: 53973aa1311f
Revises: 56ef3d13056d
Create Date: 2021-09-23 22:26:44.650788

"""

# revision identifiers, used by Alembic.
revision = '53973aa1311f'
down_revision = '56ef3d13056d'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ibm_instance_profiles',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('family', sa.String(length=255), nullable=True),
    sa.Column('bandwidth', sa.JSON(), nullable=False),
    sa.Column('vcpu_architecture', sa.JSON(), nullable=False),
    sa.Column('vcpu_count', sa.JSON(), nullable=False),
    sa.Column('href', sa.Text(), nullable=False),
    sa.Column('memory', sa.JSON(), nullable=False),
    sa.Column('os_architecture', sa.JSON(), nullable=False),
    sa.Column('port_speed', sa.JSON(), nullable=False),
    sa.Column('disks', sa.JSON(), nullable=False),
    sa.Column('region_id', sa.String(length=32), nullable=False),
    sa.Column('cloud_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['cloud_id'], ['ibm_clouds.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['ibm_regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'region_id', 'cloud_id', name='uix_ibm_instance_profile_name_region_id_cloud_id')
    )
    op.create_table('ibm_instances',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('resource_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('crn', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('href', sa.Text(), nullable=False),
    sa.Column('bandwidth', sa.Integer(), nullable=False),
    sa.Column('memory', sa.Integer(), nullable=False),
    sa.Column('startable', sa.Boolean(), nullable=False),
    sa.Column('gpu', sa.JSON(), nullable=True),
    sa.Column('ibm_status_reasons', sa.JSON(), nullable=False),
    sa.Column('vcpu', sa.JSON(), nullable=False),
    sa.Column('ibm_status', sa.Enum('deleting', 'failed', 'paused', 'pausing', 'pending', 'restarting', 'resuming', 'running', 'starting', 'stopped', 'stopping'), nullable=False),
    sa.Column('resource_group_id', sa.String(length=32), nullable=False),
    sa.Column('vpc_id', sa.String(length=32), nullable=False),
    sa.Column('instance_profile_id', sa.String(length=32), nullable=False),
    sa.Column('image_id', sa.String(length=32), nullable=True),
    sa.Column('zone_id', sa.String(length=32), nullable=False),
    sa.Column('region_id', sa.String(length=32), nullable=False),
    sa.Column('cloud_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['cloud_id'], ['ibm_clouds.id'], ),
    sa.ForeignKeyConstraint(['image_id'], ['ibm_images.id'], ),
    sa.ForeignKeyConstraint(['instance_profile_id'], ['ibm_instance_profiles.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['ibm_regions.id'], ),
    sa.ForeignKeyConstraint(['resource_group_id'], ['ibm_resource_groups.id'], ),
    sa.ForeignKeyConstraint(['vpc_id'], ['ibm_vpc_networks.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['ibm_zones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'vpc_id', 'cloud_id', 'region_id', name='uix_ibm_name_vpc_id_cloud_id_region_id')
    )
    op.create_table('ibm_instance_disks',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('resource_id', sa.String(length=64), nullable=False),
    sa.Column('interface_type', sa.Enum('virtio_blk', 'nvme'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('href', sa.Text(), nullable=False),
    sa.Column('resource_type', sa.Enum('instance_disk'), nullable=False),
    sa.Column('instance_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['ibm_instances.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'instance_id', name='uix_ibm_disk_name_instance_id')
    )
    op.create_table('ibm_instance_keys',
    sa.Column('instance_id', sa.String(length=32), nullable=False),
    sa.Column('key_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['ibm_instances.id'], ),
    sa.ForeignKeyConstraint(['key_id'], ['ibm_ssh_keys.id'], ),
    sa.PrimaryKeyConstraint('instance_id', 'key_id')
    )
    op.create_table('ibm_network_interfaces',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('resource_id', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('allow_ip_spoofing', sa.Boolean(), nullable=False),
    sa.Column('href', sa.Text(), nullable=False),
    sa.Column('port_speed', sa.Integer(), nullable=False),
    sa.Column('primary_ipv4_address', sa.String(length=255), nullable=False),
    sa.Column('resource_type', sa.Enum('network_interface'), nullable=False),
    sa.Column('ibm_status', sa.Enum('available', 'failed', 'pending', 'deleting'), nullable=False),
    sa.Column('type', sa.Enum('primary', 'secondary'), nullable=False),
    sa.Column('subnet_id', sa.String(length=32), nullable=True),
    sa.Column('instance_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['ibm_instances.id'], ),
    sa.ForeignKeyConstraint(['subnet_id'], ['ibm_subnets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'instance_id', name='uix_ibm_interface_name_instance_id')
    )
    op.create_table('ibm_instance_profile_disks',
    sa.Column('instance_profile_id', sa.String(length=32), nullable=False),
    sa.Column('disk_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['disk_id'], ['ibm_instance_disks.id'], ),
    sa.ForeignKeyConstraint(['instance_profile_id'], ['ibm_instance_profiles.id'], ),
    sa.PrimaryKeyConstraint('instance_profile_id', 'disk_id')
    )
    op.create_table('ibm_network_interfaces_security_groups',
    sa.Column('network_interface_id', sa.String(length=32), nullable=False),
    sa.Column('security_group_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['network_interface_id'], ['ibm_network_interfaces.id'], ),
    sa.ForeignKeyConstraint(['security_group_id'], ['ibm_security_groups.id'], ),
    sa.PrimaryKeyConstraint('network_interface_id', 'security_group_id')
    )
    op.create_table('ibm_volume_attachments',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('resource_id', sa.String(length=64), nullable=False),
    sa.Column('type', sa.Enum('boot', 'data'), nullable=False),
    sa.Column('delete_volume_on_instance_delete', sa.Boolean(), nullable=False),
    sa.Column('href', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('ibm_status', sa.Enum('attached', 'attaching', 'deleting', 'detaching'), nullable=False),
    sa.Column('instance_id', sa.String(length=32), nullable=False),
    sa.Column('volume_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['ibm_instances.id'], ),
    sa.ForeignKeyConstraint(['volume_id'], ['ibm_volumes.id'], ),
    sa.PrimaryKeyConstraint('instance_id', 'volume_id'),
    sa.UniqueConstraint('name', 'resource_id', 'instance_id', name='uix_ibm_volume_name_resource_id_instance_id')
    )
    op.add_column('ibm_floating_ips', sa.Column('network_interface_id', sa.String(length=32), nullable=True))
    op.create_foreign_key('ibm_floating_ips_ibfk_6', 'ibm_floating_ips', 'ibm_network_interfaces', ['network_interface_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('ibm_floating_ips_ibfk_6', 'ibm_floating_ips', type_='foreignkey')
    op.drop_column('ibm_floating_ips', 'network_interface_id')
    op.drop_table('ibm_volume_attachments')
    op.drop_table('ibm_network_interfaces_security_groups')
    op.drop_table('ibm_instance_profile_disks')
    op.drop_table('ibm_network_interfaces')
    op.drop_table('ibm_instance_keys')
    op.drop_table('ibm_instance_disks')
    op.drop_table('ibm_instances')
    op.drop_table('ibm_instance_profiles')
    # ### end Alembic commands ###

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import ibm_responses_grpc_def_pb2 as ibm__responses__grpc__def__pb2


class IBMResponseCallsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add_cloud = channel.unary_unary(
                '/ibm.IBMResponseCalls/add_cloud',
                request_serializer=ibm__responses__grpc__def__pb2.AddCloudRequest.SerializeToString,
                response_deserializer=ibm__responses__grpc__def__pb2.AddCloudResponse.FromString,
                )
        self.delete_cloud = channel.unary_unary(
                '/ibm.IBMResponseCalls/delete_cloud',
                request_serializer=ibm__responses__grpc__def__pb2.DeleteCloudRequest.SerializeToString,
                response_deserializer=ibm__responses__grpc__def__pb2.DeleteCloudResponse.FromString,
                )
        self.get_clouds = channel.unary_unary(
                '/ibm.IBMResponseCalls/get_clouds',
                request_serializer=ibm__responses__grpc__def__pb2.EmptyRequest.SerializeToString,
                response_deserializer=ibm__responses__grpc__def__pb2.GetCloudsResponse.FromString,
                )
        self.get_resources = channel.unary_unary(
                '/ibm.IBMResponseCalls/get_resources',
                request_serializer=ibm__responses__grpc__def__pb2.ResourceRequest.SerializeToString,
                response_deserializer=ibm__responses__grpc__def__pb2.ResourceResponse.FromString,
                )


class IBMResponseCallsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def add_cloud(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_cloud(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_clouds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_resources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IBMResponseCallsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add_cloud': grpc.unary_unary_rpc_method_handler(
                    servicer.add_cloud,
                    request_deserializer=ibm__responses__grpc__def__pb2.AddCloudRequest.FromString,
                    response_serializer=ibm__responses__grpc__def__pb2.AddCloudResponse.SerializeToString,
            ),
            'delete_cloud': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_cloud,
                    request_deserializer=ibm__responses__grpc__def__pb2.DeleteCloudRequest.FromString,
                    response_serializer=ibm__responses__grpc__def__pb2.DeleteCloudResponse.SerializeToString,
            ),
            'get_clouds': grpc.unary_unary_rpc_method_handler(
                    servicer.get_clouds,
                    request_deserializer=ibm__responses__grpc__def__pb2.EmptyRequest.FromString,
                    response_serializer=ibm__responses__grpc__def__pb2.GetCloudsResponse.SerializeToString,
            ),
            'get_resources': grpc.unary_unary_rpc_method_handler(
                    servicer.get_resources,
                    request_deserializer=ibm__responses__grpc__def__pb2.ResourceRequest.FromString,
                    response_serializer=ibm__responses__grpc__def__pb2.ResourceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ibm.IBMResponseCalls', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IBMResponseCalls(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def add_cloud(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibm.IBMResponseCalls/add_cloud',
            ibm__responses__grpc__def__pb2.AddCloudRequest.SerializeToString,
            ibm__responses__grpc__def__pb2.AddCloudResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_cloud(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibm.IBMResponseCalls/delete_cloud',
            ibm__responses__grpc__def__pb2.DeleteCloudRequest.SerializeToString,
            ibm__responses__grpc__def__pb2.DeleteCloudResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_clouds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibm.IBMResponseCalls/get_clouds',
            ibm__responses__grpc__def__pb2.EmptyRequest.SerializeToString,
            ibm__responses__grpc__def__pb2.GetCloudsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_resources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ibm.IBMResponseCalls/get_resources',
            ibm__responses__grpc__def__pb2.ResourceRequest.SerializeToString,
            ibm__responses__grpc__def__pb2.ResourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
